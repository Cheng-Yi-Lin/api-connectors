/**
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "OrderIdRes.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

OrderIdRes::OrderIdRes()
{
    m_Order_id = utility::conversions::to_string_t("");
    m_Order_idIsSet = false;
}

OrderIdRes::~OrderIdRes()
{
}

void OrderIdRes::validate()
{
    // TODO: implement validation
}

web::json::value OrderIdRes::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Order_idIsSet)
    {
        val[utility::conversions::to_string_t("order_id")] = ModelBase::toJson(m_Order_id);
    }

    return val;
}

void OrderIdRes::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("order_id")))
    {
        web::json::value& fieldValue = val[utility::conversions::to_string_t("order_id")];
        if(!fieldValue.is_null())
        {
            setOrderId(ModelBase::stringFromJson(fieldValue));
        }
    }
}

void OrderIdRes::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Order_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("order_id"), m_Order_id));
        
    }
}

void OrderIdRes::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("order_id")))
    {
        setOrderId(ModelBase::stringFromHttpContent(multipart->getContent(utility::conversions::to_string_t("order_id"))));
    }
}

utility::string_t OrderIdRes::getOrderId() const
{
    return m_Order_id;
}


void OrderIdRes::setOrderId(utility::string_t value)
{
    m_Order_id = value;
    m_Order_idIsSet = true;
}
bool OrderIdRes::orderIdIsSet() const
{
    return m_Order_idIsSet;
}

void OrderIdRes::unsetOrder_id()
{
    m_Order_idIsSet = false;
}

}
}
}
}

