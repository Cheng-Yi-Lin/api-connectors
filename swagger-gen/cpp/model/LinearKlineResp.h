/**
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * LinearKlineResp.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_LinearKlineResp_H_
#define IO_SWAGGER_CLIENT_MODEL_LinearKlineResp_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  LinearKlineResp
    : public ModelBase
{
public:
    LinearKlineResp();
    virtual ~LinearKlineResp();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LinearKlineResp members

    /// <summary>
    /// 
    /// </summary>
    double getClose() const;
    bool closeIsSet() const;
    void unsetClose();
    void setClose(double value);
    /// <summary>
    /// 
    /// </summary>
    double getHigh() const;
    bool highIsSet() const;
    void unsetHigh();
    void setHigh(double value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getInterval() const;
    bool intervalIsSet() const;
    void unsetInterval();
    void setInterval(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getLow() const;
    bool lowIsSet() const;
    void unsetLow();
    void setLow(double value);
    /// <summary>
    /// 
    /// </summary>
    double getOpen() const;
    bool openIsSet() const;
    void unsetOpen();
    void setOpen(double value);
    /// <summary>
    /// 
    /// </summary>
    int64_t getOpenTime() const;
    bool openTimeIsSet() const;
    void unsetOpen_time();
    void setOpenTime(int64_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPeriod() const;
    bool periodIsSet() const;
    void unsetPeriod();
    void setPeriod(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int64_t getStartAt() const;
    bool startAtIsSet() const;
    void unsetStart_at();
    void setStartAt(int64_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSymbol() const;
    bool symbolIsSet() const;
    void unsetSymbol();
    void setSymbol(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getTurnover() const;
    bool turnoverIsSet() const;
    void unsetTurnover();
    void setTurnover(double value);
    /// <summary>
    /// 
    /// </summary>
    double getVolume() const;
    bool volumeIsSet() const;
    void unsetVolume();
    void setVolume(double value);

protected:
    double m_Close;
    bool m_CloseIsSet;
    double m_High;
    bool m_HighIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Interval;
    bool m_IntervalIsSet;
    double m_Low;
    bool m_LowIsSet;
    double m_Open;
    bool m_OpenIsSet;
    int64_t m_Open_time;
    bool m_Open_timeIsSet;
    utility::string_t m_Period;
    bool m_PeriodIsSet;
    int64_t m_Start_at;
    bool m_Start_atIsSet;
    utility::string_t m_Symbol;
    bool m_SymbolIsSet;
    double m_Turnover;
    bool m_TurnoverIsSet;
    double m_Volume;
    bool m_VolumeIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_LinearKlineResp_H_ */
