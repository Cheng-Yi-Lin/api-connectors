/**
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.10
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * LinearExecutionApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_LinearExecutionApi_H_
#define IO_SWAGGER_CLIENT_API_LinearExecutionApi_H_


#include "../ApiClient.h"

#include "Object.h"
#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  LinearExecutionApi
{
public:
    LinearExecutionApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~LinearExecutionApi();
    /// <summary>
    /// Get user&#39;s trading records.
    /// </summary>
    /// <remarks>
    /// This will get user&#39;s trading records.
    /// </remarks>
    /// <param name="symbol"> (optional)</param>
    /// <param name="startTime"> (optional)</param>
    /// <param name="endTime"> (optional)</param>
    /// <param name="execType"> (optional)</param>
    /// <param name="page"> (optional)</param>
    /// <param name="limit"> (optional)</param>
    pplx::task<std::shared_ptr<Object>> linearExecution_getTrades(
        boost::optional<utility::string_t> symbol,
        boost::optional<int64_t> startTime,
        boost::optional<int64_t> endTime,
        boost::optional<utility::string_t> execType,
        boost::optional<int64_t> page,
        boost::optional<int64_t> limit
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_LinearExecutionApi_H_ */

