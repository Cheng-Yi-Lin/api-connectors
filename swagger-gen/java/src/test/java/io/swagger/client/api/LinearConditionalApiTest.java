/*
 * Bybit API
 * ## REST API for the Bybit Exchange. Base URI: [https://api.bybit.com]  
 *
 * OpenAPI spec version: 0.2.12
 * Contact: support@bybit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Test;

import java.math.BigDecimal;

/**
 * API tests for LinearConditionalApi
 */
@Ignore
public class LinearConditionalApiTest {

    private final static LinearConditionalApi api = new LinearConditionalApi();

    @BeforeClass
    public static void setUp() {
        // overwrite apiClient here
        // ApiClient apiClient = new ApiClient();
        // apiClient.setBasePath("https://api.bybit.com"); // https://api-testnet.bybit.com
        // apiClient.setApiKey("");
        // apiClient.setSecret("");
        // api.setApiClient(apiClient);
    }

    
    /**
     * Cancel Active Order
     *
     * This will cancel linear active order
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void linearConditionalCancelTest() throws ApiException {
        String stopOrderId = null;
        String orderLinkId = null;
        String symbol = null;
        Object response = api.linearConditionalCancel(stopOrderId, orderLinkId, symbol);

        // TODO: test validations
    }
    
    /**
     * Cancel all stop orders.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void linearConditionalCancelAllTest() throws ApiException {
        String symbol = null;
        Object response = api.linearConditionalCancelAll(symbol);

        // TODO: test validations
    }
    
    /**
     * Get linear Stop Orders
     *
     * This will get linear active orders
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void linearConditionalGetOrdersTest() throws ApiException {
        String stopOrderId = null;
        String orderLinkId = null;
        String symbol = null;
        String order = null;
        String page = null;
        String limit = null;
        String stopOrderStatus = null;
        Object response = api.linearConditionalGetOrders(stopOrderId, orderLinkId, symbol, order, page, limit, stopOrderStatus);

        // TODO: test validations
    }
    
    /**
     * Create linear stop Order
     *
     * This will create linear stop order
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void linearConditionalNewTest() throws ApiException {
        String symbol = null;
        String side = null;
        String orderType = null;
        Double qty = null;
        Double price = null;
        Double basePrice = null;
        Double stopPx = null;
        String timeInForce = null;
        String triggerBy = null;
        Boolean reduceOnly = null;
        Boolean closeOnTrigger = null;
        String orderLinkId = null;
        Double takeProfit = null;
        Double stopLoss = null;
        String tpTriggerBy = null;
        String slTriggerBy = null;
        Object response = api.linearConditionalNew(symbol, side, orderType, qty, price, basePrice, stopPx, timeInForce, triggerBy, reduceOnly, closeOnTrigger, orderLinkId, takeProfit, stopLoss, tpTriggerBy, slTriggerBy);

        // TODO: test validations
    }
    
    /**
     * Get Stop Orders(real-time)
     *
     * This will get linear stop orders(real-time)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void linearConditionalQueryTest() throws ApiException {
        String symbol = null;
        String stopOrderId = null;
        String orderLinkId = null;
        Object response = api.linearConditionalQuery(symbol, stopOrderId, orderLinkId);

        // TODO: test validations
    }
    
    /**
     * Replace conditional order
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void linearConditionalReplaceTest() throws ApiException {
        String symbol = null;
        String stopOrderId = null;
        String orderLinkId = null;
        String pRQty = null;
        BigDecimal pRPrice = null;
        BigDecimal pRTriggerPrice = null;
        Object response = api.linearConditionalReplace(symbol, stopOrderId, orderLinkId, pRQty, pRPrice, pRTriggerPrice);

        // TODO: test validations
    }
    
}
