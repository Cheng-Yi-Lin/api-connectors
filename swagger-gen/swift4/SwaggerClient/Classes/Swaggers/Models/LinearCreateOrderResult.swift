//
// LinearCreateOrderResult.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Create Linear Order */

public struct LinearCreateOrderResult: Codable {

    public var createdTime: String?
    public var cumExecFee: Double?
    public var cumExecQty: Double?
    public var cumExecValue: Double?
    public var lastExecPrice: Double?
    public var orderId: String?
    public var orderLinkId: String?
    public var orderStatus: String?
    public var orderType: String?
    public var price: Double?
    public var qty: Double?
    public var reduceOnly: Bool?
    public var side: String?
    public var symbol: String?
    public var timeInForce: String?
    public var updatedTime: String?
    public var userId: Int64?
    public var takeProfit: Double?
    public var stopLoss: Double?
    public var tpTriggerBy: String?
    public var slTriggerBy: String?

    public init(createdTime: String?, cumExecFee: Double?, cumExecQty: Double?, cumExecValue: Double?, lastExecPrice: Double?, orderId: String?, orderLinkId: String?, orderStatus: String?, orderType: String?, price: Double?, qty: Double?, reduceOnly: Bool?, side: String?, symbol: String?, timeInForce: String?, updatedTime: String?, userId: Int64?, takeProfit: Double?, stopLoss: Double?, tpTriggerBy: String?, slTriggerBy: String?) {
        self.createdTime = createdTime
        self.cumExecFee = cumExecFee
        self.cumExecQty = cumExecQty
        self.cumExecValue = cumExecValue
        self.lastExecPrice = lastExecPrice
        self.orderId = orderId
        self.orderLinkId = orderLinkId
        self.orderStatus = orderStatus
        self.orderType = orderType
        self.price = price
        self.qty = qty
        self.reduceOnly = reduceOnly
        self.side = side
        self.symbol = symbol
        self.timeInForce = timeInForce
        self.updatedTime = updatedTime
        self.userId = userId
        self.takeProfit = takeProfit
        self.stopLoss = stopLoss
        self.tpTriggerBy = tpTriggerBy
        self.slTriggerBy = slTriggerBy
    }

    public enum CodingKeys: String, CodingKey { 
        case createdTime = "created_time"
        case cumExecFee = "cum_exec_fee"
        case cumExecQty = "cum_exec_qty"
        case cumExecValue = "cum_exec_value"
        case lastExecPrice = "last_exec_price"
        case orderId = "order_id"
        case orderLinkId = "order_link_id"
        case orderStatus = "order_status"
        case orderType = "order_type"
        case price
        case qty
        case reduceOnly = "reduce_only"
        case side
        case symbol
        case timeInForce = "time_in_force"
        case updatedTime = "updated_time"
        case userId = "user_id"
        case takeProfit = "take_profit"
        case stopLoss = "stop_loss"
        case tpTriggerBy = "tp_trigger_by"
        case slTriggerBy = "sl_trigger_by"
    }


}

